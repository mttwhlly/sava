'use client';

// import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { useSession, signIn, signOut } from 'next-auth/react';
import { SessionProvider } from 'next-auth/react';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };

export function AuthStatus() {
  const { data: session } = useSession();

  if (session) {
    return (
      <div className="mb-4 w-full flex p-4">
        <div className="flex flex-row gap-4 justify-between w-full">
          Signed in as {session.user?.email}{' '}
          <button
            className="border border-white px-4 py-2 rounded hover:bg-white hover:text-black cursor-pointer"
            onClick={() => signOut()}
          >
            Sign out
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="mb-4 w-full flex justify-end p-4">
      <button
        className="border border-white px-4 py-2 rounded hover:bg-white hover:text-black cursor-pointer"
        onClick={() => signIn('google')}
      >
        Sign in with Google
      </button>
    </div>
  );
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SessionProvider>
          <AuthStatus />
          {children}
        </SessionProvider>
      </body>
    </html>
  );
}
